- name: install apache2
  apt: name=apache2 state=present

- name: update apache2 config
  copy: src=apache2.conf dest=/etc/apache2/sites-available/000-default.conf
  notify: restart apache2

- name: update apache2 envvars
  copy: src=apache2_envvars dest=/etc/apache2/envvars
  notify: restart apache2

- name: install cldemo apt-key
  apt_key: url=http://cldemo.cumulusnetworks.com/stable/dists/cldemo/cldemo.key

- name: add cldemo sources list
  template: src=cldemo.list.j2 dest=/etc/apt/sources.list.d/cldemo.list

- name: add brightbox and ansible ppa
  apt_repository:  repo={{item}}
  with_items:
    - ppa:brightbox/ruby-ng
    - ppa:ansible/ansible

- name: copy deb that enables puppet repo to host
  copy: src=puppetlabs-release-trusty.deb dest=/tmp/puppet_install.deb

- name: install puppet repo deb
  apt: deb=/tmp/puppet_install.deb

- name: install curl, man, and bash-completion
  apt: name={{ item }}
  with_items:
    - curl
    - man
    - bash-completion

- name: clean up apt-cacher ng
  command: curl "http://mirror.cwb.cumulusnetworks.com:3142/acng-report.html?abortOnErrors=aOe&byPath=bP&byChecksum=bS&truncNow=tN&incomAsDamaged=iad&purgeNow=pN&doExpire=Start+Scan+and%2For+Expiration&calcSize=cs&asNeeded=an#bottom"
  when: ubuntu_apt_server == 'mirror.cwb.cumulusnetworks.com'

- name: run apt-get update
  apt: update_cache=yes

- name: install cldemo base packages 1
  apt: name={{ item }}
  with_items:
    - ruby2.1
    - ruby2.1-dev
    - ruby-switch
    - git
    - bundler

- name: install cldemo base packages 2
  apt: name={{ item }}
  with_items:
    - cldemo-wbench-base
    - cldemo-wbench-osinstaller-erasembr

- name: set default ruby to 2.1
  command: ruby-switch --set ruby2.1

- name: copy ansible user authorized_keys to cumulus user ssh authorized_keys. needed for prepare_cumulus_env role
  command: cp {{ ansible_env.PWD }}/.ssh/authorized_keys /home/cumulus/.ssh/authorized_keys

- name: create dummy files so that cldemo installs
  file: path=/var/www/{{item}} state=touch
  with_items:
    - topology.dot
    - dummy.lic
    - wbench.json

- name: copy onie install images to workbench
  copy: src={{item}} dest=/var/www/{{item | basename}} owner=cumulus group=cumulus mode=0644
  with_fileglob:
    - /var/www/bootstrap/CumulusLinux*
    - /var/www/bootstrap/CumulusLicense*

- name: symlink the CL images to onie-installer TODO allow user to pick an image
  file: src=/var/www/{{ item.original }} dest=/var/www/{{ item.target }} state=link
  with_items:
    - { original: 'CumulusLinux-{{ cumulus_version }}-amd64.bin', target: 'onie-installer-x86_64' }
    - { original: 'CumulusLinux-{{ cumulus_version }}-powerpc.bin', target: 'onie-installer-powerpc' }
  when: cumulus_version is defined

- name: symlink the v1 license if we are using CL < 2.5.3
  file: src=/var/www/CumulusLicense-v1 dest=/var/www/license.lic state=link
  when: cumulus_version is defined and cumulus_version  < '2.5.3'

- name: symlink the v2 license if we are using CL >= 2.5.3
  file: src=/var/www/CumulusLicense-v2 dest=/var/www/license.lic state=link
  when: cumulus_version is defined and cumulus_version  >= '2.5.3'

- name: symlink the license again for each hostname
  file: src=/var/www/license.lic dest=/var/www/{{ item.key }}.lic state=link
  with_dict: "{{wbench_hosts}}"
  when: cumulus_version is defined
  
- name: put rename script in /var/www
  copy: src=rename_eth_swp dest=/var/www/rename_eth_swp

- name: create the ztp script
  template: src=provision.sh.j2 dest=/var/www/provision.sh
